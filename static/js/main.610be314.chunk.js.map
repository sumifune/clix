{"version":3,"sources":["http-common.js","services/patient.service.js","components/add-patient.component.js","components/patient.component.js","services/appointment.service.js","components/patients-list.component.js","components/cancel-appointment-modal.component.js","components/appointment-item.js","components/appointments-list.component.js","components/add-appointment.component.js","components/search.component.js","components/appointments-list-by-patient.component.js","services/invoice.service.js","components/invoices-list.component.js","services/service.service.js","components/add-invoice.component.js","components/search-modal-invoices.component.js","components/invoices-list-by-patient.component.js","components/observations-list-by-patient.component.js","components/add-observation.component.js","components/services-list.component.js","components/add-service.component.js","components/service.component.js","App.js","serviceWorker.js","fontawesome.js","index.js"],"names":["axios","create","baseURL","headers","params","http","get","id","data","post","put","delete","surname","observation","AddPatient","props","onChangeName","bind","onChangeSurname","onChangeAddress","onChangeCity","onChangeDni","onChangePhone","onChangeEmail","onChangeDescription","savePatient","newPatient","state","name","address","city","dni","phone","email","description","active","submitted","e","this","setState","target","value","PatientDataService","then","response","catch","console","log","autoComplete","className","onClick","htmlFor","type","required","onChange","style","marginBottom","Component","Patient","getPatient","updateActive","updatePatient","deletePatient","currentPatient","message","match","prevState","status","update","history","push","date","PatientsList","handleKeyPress","event","key","retrievePatients","onChangeSearchSurname","handlePageChange","handlePageSizeChange","toggleMenu","addAppointment","makeAppointment","patients","searchSurname","page","count","pageSize","pageSizes","getRequestParams","getAll","totalPages","patient","getAttribute","expanded","res","split","hour_date_selectedDate","madeBy","hour","service","estate","AppointmentDataService","placeholder","onKeyPress","map","index","paddingLeft","data-toggle","data-target","aria-expanded","aria-controls","inx","Dropdown","as","ButtonGroup","Button","variant","patientid","serviceid","Toggle","Menu","Item","href","Divider","aria-labelledby","data-parent","to","size","Pagination","siblingCount","boundaryCount","shape","CancelAppointmentModal","OverlayTrigger","placement","overlay","Tooltip","handleShow","fontWeight","Modal","show","onHide","handleClose","Header","closeButton","Title","Body","Container","Row","Col","xs","md","Footer","cancelAppointment","aid","arrindx","indexdate","AppointmentItem","appointment","isMobile","useMediaQuery","query","useState","setShow","popover","Popover","Content","moment","createdAt","fromNow","display","justifyContent","document","body","click","fulfillAppointment","trigger","rootClose","backgroundColor","height","marginTop","alignItems","borderRadius","charAt","locale","AddAppointment","deleteAppointment","i","appointments","filter","item","j","redirectPatients","day","selectedDate","qdate","add","format","handleDateChange","retrieveAppointments","previousDates","followingDates","apointee","selected","prevProps","findByDateNext","nextFiveDates","concat","arrIndx","timeSlotConainer","border","minHeight","hourHeader","timeSlot","aaaa","libInstance","utils","MomentUtils","margin","label","cancelLabel","okLabel","KeyboardButtonProps","paddingTop","Array","from","length","toString","appointmentDates","indexDate","stopPropagation","setService","findByDate","appointmentAcu","appointmentPsico","minDate","InputGroup","DropdownButton","Prepend","title","FormControl","aria-describedby","readOnly","marginLeft","Toast","onClose","src","alt","SearchModal","date1","setDate1","date2","setDate2","setFilter","doFilter","handleState","passAppointment","handleCloseModal","handleShowModal","findByPatientId","Card","Subtitle","Text","Link","InvoicesList","retrieveInvoices","cancelInvoice","payInvoice","sayHi","invoices","startOf","InvoiceDataService","invoice","inumber","SplitButton","DropdownType","idx","eventKey","toUpperCase","slice","background","paddingRight","concept","base","iva","total","emittedTo","_id","AddVoice","onChangeConcept","onChangeSessions","saveInvoice","newInvoice","sessions","services","retrieveServices","ServiceDataService","options","selectedIndex","Form","Group","controlId","Label","Control","defaultValue","InvoicesListByPatient","ObservationsList","retrieveObservations","deleteObservation","sortObs","sortObsInv","observations","findObservations","sortedArray","sort","a","b","Date","observationID","newArray","o","note","onChangeNote","addObservation","success","rows","ServicesList","cost","AddService","onChangeIVA","createService","newService","updateService","getService","App","Navbar","bg","Brand","Collapse","Nav","NavDropdown","alignRight","exact","path","component","AddObservation","AppointmentsList","AppointmentsListByPatient","AddInvoice","Service","Boolean","window","location","hostname","library","faCoffee","faCalendarTimes","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.610be314.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  // baseURL: \"http://192.168.99.100/api\",\r\n  baseURL: \"http://128.199.52.198/api\",\r\n  // baseURL: \"http://localhost:3000/api\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n  },\r\n});\r\n","import http from \"../http-common\";\r\n\r\nclass PatientDataService {\r\n  getAll(params) {\r\n    return http.get(\"/patients\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/patients/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/patients\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/patients/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/patients/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/patients`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/patients?surname=${surname}`);\r\n  }\r\n\r\n  findObservations(id) {\r\n    return http.get(`/patients/${id}/obs`);\r\n  }\r\n\r\n  deleteObservation(id, observation) {\r\n    return http.delete(`/patients/${id}/obs?observation=${observation}`);\r\n  }\r\n\r\n  addObservation(id, data) {\r\n    return http.put(`/patients/${id}/addob`, data);\r\n  }\r\n}\r\n\r\nexport default new PatientDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.savePatient = this.savePatient.bind(this);\r\n    this.newPatient = this.newPatient.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n  onChangeSurname(e) {\r\n    this.setState({\r\n      surname: e.target.value,\r\n    });\r\n  }\r\n  onChangeAddress(e) {\r\n    this.setState({\r\n      address: e.target.value,\r\n    });\r\n  }\r\n  onChangeCity(e) {\r\n    this.setState({\r\n      city: e.target.value,\r\n    });\r\n  }\r\n  onChangeDni(e) {\r\n    this.setState({\r\n      dni: e.target.value,\r\n    });\r\n  }\r\n  onChangePhone(e) {\r\n    this.setState({\r\n      phone: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value,\r\n    });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value,\r\n    });\r\n  }\r\n\r\n  savePatient() {\r\n    var data = {\r\n      name: this.state.name,\r\n      surname: this.state.surname,\r\n      address: this.state.address,\r\n      city: this.state.city,\r\n      dni: this.state.dni,\r\n      phone: this.state.phone,\r\n      email: this.state.email,\r\n      description: this.state.description,\r\n    };\r\n\r\n    PatientDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          surname: response.data.surname,\r\n          address: response.data.address,\r\n          city: response.data.city,\r\n          dni: response.data.dni,\r\n          phone: response.data.phone,\r\n          email: response.data.email,\r\n          description: response.data.description,\r\n          active: response.data.active,\r\n\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newPatient() {\r\n    this.setState({\r\n      id: null,\r\n      name: \"\",\r\n      surname: \"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      dni: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      description: \"\",\r\n      active: false,\r\n\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form autoComplete=\"off\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Nombre</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Apellidos</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"surname\"\r\n                required\r\n                value={this.state.surname}\r\n                onChange={this.onChangeSurname}\r\n                name=\"surname\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"address\">Dirección</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"address\"\r\n                required\r\n                value={this.state.address}\r\n                onChange={this.onChangeAddress}\r\n                name=\"address\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"city\">Ciudad</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"city\"\r\n                required\r\n                value={this.state.city}\r\n                onChange={this.onChangeCity}\r\n                name=\"city\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"dni\">DNI</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"dni\"\r\n                required\r\n                value={this.state.dni}\r\n                onChange={this.onChangeDni}\r\n                name=\"dni\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"phone\">Teléfono</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"phone\"\r\n                required\r\n                value={this.state.phone}\r\n                onChange={this.onChangePhone}\r\n                name=\"phone\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                required\r\n                value={this.state.email}\r\n                onChange={this.onChangeEmail}\r\n                name=\"email\"\r\n                autoComplete=\"nope\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Descripción</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.description}\r\n                onChange={this.onChangeDescription}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.savePatient} className=\"btn btn-secondary\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        )}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport './patient.component.css';\r\n\r\nexport default class Patient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.onChangeSurname = this.onChangeSurname.bind(this);\r\n    this.onChangeAddress = this.onChangeAddress.bind(this);\r\n    this.onChangeCity = this.onChangeCity.bind(this);\r\n    this.onChangeDni = this.onChangeDni.bind(this);\r\n    this.onChangePhone = this.onChangePhone.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n\r\n    this.getPatient = this.getPatient.bind(this);\r\n    this.updateActive = this.updateActive.bind(this);\r\n    this.updatePatient = this.updatePatient.bind(this);\r\n    this.deletePatient = this.deletePatient.bind(this);\r\n\r\n    this.state = {\r\n      currentPatient: {\r\n        id: null,\r\n        name: \"\",\r\n        surname: \"\",\r\n        address: \"\",\r\n        city: \"\",\r\n        dni: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n        description: \"\",\r\n        active: false,\r\n\r\n        submitted: false,\r\n      },\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getPatient(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeName(e) {\r\n    const name = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          name: name,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeSurname(e) {\r\n    const surname = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          surname: surname,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeAddress(e) {\r\n    const address = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          address: address,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeCity(e) {\r\n    const city = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          city: city,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDni(e) {\r\n    const dni = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          dni: dni,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangePhone(e) {\r\n    const phone = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          phone: phone,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    const email = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentPatient: {\r\n          ...prevState.currentPatient,\r\n          email: email,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n\r\n    this.setState((prevState) => ({\r\n      currentPatient: {\r\n        ...prevState.currentPatient,\r\n        description: description,\r\n      },\r\n    }));\r\n  }\r\n\r\n  getPatient(id) {\r\n    PatientDataService.get(id)\r\n      .then((response) => {\r\n        this.setState({\r\n          currentPatient: response.data,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateActive(status) {\r\n    var data = {\r\n      id: this.state.currentPatient.id,\r\n      name: this.state.currentPatient.name,\r\n      surname: this.state.currentPatient.surname,\r\n      address: this.state.currentPatient.address,\r\n      city: this.state.currentPatient.city,\r\n      dni: this.state.currentPatient.dni,\r\n      phone: this.state.currentPatient.phone,\r\n      email: this.state.currentPatient.email,\r\n      description: this.state.currentPatient.description,\r\n      active: status,\r\n    };\r\n\r\n    PatientDataService.update(this.state.currentPatient.id, data)\r\n      .then((response) => {\r\n        this.setState((prevState) => ({\r\n          currentPatient: {\r\n            ...prevState.currentPatient,\r\n            active: status,\r\n          },\r\n        }));\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePatient() {\r\n    PatientDataService.update(\r\n      this.state.currentPatient.id,\r\n      this.state.currentPatient\r\n    )\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.setState({\r\n          message: \"Paciente actualizado correctamente!\",\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deletePatient() {\r\n    PatientDataService.delete(this.state.currentPatient.id)\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        this.props.history.push(\"/patients\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentPatient } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentPatient ? (\r\n          <div className=\"edit-form\">\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Nombre</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"name\"\r\n                  value={currentPatient.name}\r\n                  onChange={this.onChangeName}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"surname\">Apellidos</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"surname\"\r\n                  value={currentPatient.surname}\r\n                  onChange={this.onChangeSurname}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"address\">Dirección</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"address\"\r\n                  value={currentPatient.address}\r\n                  onChange={this.onChangeAddress}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"city\">Ciudad</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"city\"\r\n                  value={currentPatient.city}\r\n                  onChange={this.onChangeCity}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"dni\">DNI</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"dni\"\r\n                  value={currentPatient.dni}\r\n                  onChange={this.onChangeDni}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"phone\">Teléfono</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"phone\"\r\n                  value={currentPatient.phone}\r\n                  onChange={this.onChangePhone}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  value={currentPatient.email}\r\n                  onChange={this.onChangeEmail}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Descripción</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentPatient.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Estado:</strong>\r\n                </label>\r\n                {currentPatient.active ? \"Active\" : \"Inactive\"}\r\n              </div>\r\n            </form>\r\n            <div className=\"action-buttons\">\r\n              {currentPatient.active ? (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(false)}\r\n                >\r\n                  Desactivar\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  className=\"badge badge-primary mr-2\"\r\n                  onClick={() => this.updateActive(true)}\r\n                >\r\n                  Activar\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                className=\"badge badge-danger mr-2\"\r\n                onClick={this.deletePatient}\r\n              >\r\n                Eliminar\r\n              </button>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"badge badge-success\"\r\n                onClick={this.updatePatient}\r\n              >\r\n                Actualizar\r\n              </button>\r\n              <p>{this.state.message}</p>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Patient...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass AppointmentDataService {\r\n  getAll(params) {\r\n    return http.get(\"/appointments\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/appointments/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/appointments\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/appointments/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/appointments/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/appointments`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/appointments?surname=${surname}`);\r\n  }\r\n\r\n  findByPatientId(id) {\r\n    return http.get(`/appointments/patient/${id}`);\r\n  }\r\n\r\n  findByDate(date) {\r\n    return http.get(`/appointments/scheduled?date=${date}`);\r\n  }\r\n\r\n  findByDateNext(date) {\r\n    return http.get(`/appointments/scheduled/next?date=${date}`);\r\n  }\r\n}\r\n\r\nexport default new AppointmentDataService();\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './patients-list.component.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\n\r\n\r\nexport default class PatientsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrievePatients = this.retrievePatients.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.makeAppointment = this.makeAppointment.bind(this);\r\n\r\n    this.state = {\r\n      patients: [],\r\n      searchSurname: \"\",\r\n\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 3,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match.params.id);\r\n    this.retrievePatients();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrievePatients() {\r\n    const { searchSurname, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, page, pageSize);\r\n\r\n    PatientDataService.getAll(params)\r\n      .then((response) => {\r\n        const { patients, totalPages } = response.data;\r\n\r\n        this.setState({\r\n          patients: patients,\r\n          count: totalPages,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrievePatients();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      console.log('enter press here! ');\r\n      this.retrievePatients();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let patients = [...this.state.patients];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let patient = {...patients[event.target.getAttribute('inx')]};\r\n    // console.log(patient);\r\n    // 3. Replace the property you're intested in\r\n    patient.expanded = !!!patient.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    patients[event.target.getAttribute('inx')] = patient;\r\n    // 5. Set the state to our new copy\r\n    this.setState({patients});\r\n  }\r\n\r\n  makeAppointment(e){\r\n    console.log(this.props.match.params.id);\r\n\r\n    console.log(this.props.history.push('/appointments/'));\r\n    console.log('--------------------------------------------------');\r\n    var res = this.props.match.params.id.split(\"_\");\r\n    console.log(res);\r\n    console.log('kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk');\r\n    console.log(e.target.getAttribute('patientid'));\r\n  }\r\n\r\n  addAppointment(e) {\r\n\r\n    let hour_date_selectedDate = this.props.match.params.id.split(\"_\");\r\n\r\n    var data = {\r\n      madeBy: e.target.getAttribute('patientid'),\r\n      hour: hour_date_selectedDate[0],\r\n      date: hour_date_selectedDate[1],\r\n      service: e.target.getAttribute('serviceid'),\r\n      estate: \"pending\",\r\n    };\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        this.props.history.push('/appointments/after/' + hour_date_selectedDate[2])\r\n        // console.log(response.data);\r\n        // this.setState(state => {\r\n        //   const appointments = state.appointments.concat(response.data);\r\n\r\n        //   return {\r\n        //     appointments,\r\n        //   };\r\n\r\n        // });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      searchSurname,\r\n      patients,\r\n      page,\r\n      count,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por apellido\"\r\n              value={searchSurname}\r\n              onChange={this.onChangeSearchSurname}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.retrievePatients}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n\r\n          <div id=\"accordion\">\r\n\r\n            { patients && patients.map((patient, index) => (\r\n\r\n\r\n              <div className=\"card\" key={index}>\r\n                <div className=\"card-header\"\r\n                     id={`heading${index}`}>\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6 col-md-8\" style={{ paddingLeft: '0px'}}>\r\n                      <h5 className=\"mb-0\">\r\n                        <button className={\"btn btn-link\" + (patient.expanded ? \"\" : \" collapsed\")}\r\n                                data-toggle=\"collapse\"\r\n                                data-target={`#collapse${index}`}\r\n                                aria-expanded={(patient.expanded ? \"true\" : \"false\")}\r\n                                aria-controls={`collapse${index}`}\r\n                                inx={index}\r\n                                onClick={ this.toggleMenu }\r\n                                >\r\n                          {patient.surname},&nbsp; {patient.name}\r\n                        </button>\r\n                      </h5>\r\n                    </div>\r\n                    <div className=\"col-6 col-md-4\">\r\n\r\n                      { this.props.match.params.id ?\r\n                        <Dropdown as={ButtonGroup}>\r\n                          <Button variant=\"secondary\" patientid={patient.id} serviceid=\"Acupuntura\" onClick={this.addAppointment}>Acupuntura</Button>\r\n                          <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item patientid={patient.id} serviceid=\"Psicología\" onClick={this.addAppointment}>Psicología</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n                        :\r\n                        <Dropdown as={ButtonGroup}>\r\n                          <Button variant=\"secondary\" href={\"/addappointment/\" + patient.id}>Citar</Button>\r\n\r\n                          <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                          <Dropdown.Menu>\r\n                            <Dropdown.Item href={\"/appointments/patient/\" + patient.id}>Citas</Dropdown.Item>\r\n                            <Dropdown.Item href={\"/patients/\" + patient.id + \"/obs\"}>Historia</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href={\"/addinvoice/\" + patient.id}>Nueva factura</Dropdown.Item>\r\n                            <Dropdown.Item href={\"/invoices/patient/\" + patient.id}>Facturas</Dropdown.Item>\r\n                            <Dropdown.Divider />\r\n                            <Dropdown.Item href={\"/patients/\" + patient.id}>Editar</Dropdown.Item>\r\n                          </Dropdown.Menu>\r\n                        </Dropdown>\r\n\r\n                      }\r\n                      {/* comment */}\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n                <div id={`collapse${index}`}\r\n                     className={\"collapse\" + (patient.expanded ? \" show\" : \"\")}\r\n                     aria-labelledby={`heading${index}`}\r\n                     data-parent=\"#accordion\">\r\n                  <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-9\">\r\n                        <p>{patient.address} - &nbsp; {patient.city}</p>\r\n                        <p>DNI: {patient.dni} - &nbsp; Tel: {patient.phone}</p>\r\n                        <p>{patient.email}</p>\r\n                        <p>Notas: {patient.description}</p>\r\n                        <p className=\"badgePatient\">\r\n                          {patient.active ? (\r\n                            <span className=\"badge badge-primary\">\r\n                              Activo\r\n                            </span>\r\n                          ):(\r\n                            <span className=\"badge badge-danger\">\r\n                              Inactivo\r\n                            </span>\r\n                          )}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"col-3\">\r\n                        <Link\r\n                          type=\"button\"\r\n                          to={\"/patients/\" + patient.id}\r\n                          className=\"btn btn-secondary\"\r\n                        >\r\n                          Editar\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            ))}\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"paging\">\r\n            <div>\r\n              <span className=\"selectText\">{\"Refs por página: \"}</span>\r\n              <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                {this.pageSizes.map((size) => (\r\n                  <option key={size} value={size}>\r\n                    {size}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <div className=\"bbb\">\r\n                <Pagination\r\n                  className=\"my-3\"\r\n                  count={count}\r\n                  page={page}\r\n                  siblingCount={1}\r\n                  boundaryCount={1}\r\n                  variant=\"outlined\"\r\n                  shape=\"rounded\"\r\n                  onChange={this.handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nfunction CancelAppointmentModal(props) {\r\n\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleClose();\r\n    props.cancelAppointment(props.aid,props.arrindx, props.indexdate);\r\n  }\r\n  return (\r\n    <>\r\n      <OverlayTrigger\r\n        key={'top'}\r\n        placement={'top'}\r\n        overlay={\r\n          <Tooltip id={`tooltip-${'top'}`}>\r\n            Cancelar cita\r\n          </Tooltip>\r\n        }\r\n      >\r\n        <Button variant=\"danger\" size=\"sm\" onClick={props.handleShow}>\r\n          <span style={{ fontWeight: 'bold' }}>Cancelar</span>\r\n        </Button>\r\n      </OverlayTrigger>\r\n\r\n\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cancelar cita</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\r\n\t            </Col>\r\n\t          </Row>\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Si\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CancelAppointmentModal;","// AuthButton.js\r\nimport React, { useState } from \"react\";\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Popover from 'react-bootstrap/Popover';\r\n\r\nimport moment from \"moment\";\r\n// import MomentUtils from '@date-io/moment';\r\nimport 'moment/locale/es';\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport CancelAppointmentModal from \"./cancel-appointment-modal.component\";\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nconst AppointmentItem = props => {\r\n  let { service, estate } = props.appointment;\r\n  const appointA = {\r\n    backgroundColor: '#bde4ea',\r\n    height: '40px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // paddingLeft: '12px',\r\n    // paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n  };\r\n  const appointAF = {\r\n    backgroundColor: '#bde400',\r\n    height: '40px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // paddingLeft: '12px',\r\n    // paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n  };\r\n  const appointAC = {\r\n    backgroundColor: '#ff4d4d',\r\n    height: '40px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // paddingLeft: '12px',\r\n    // paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n  };\r\n\r\n  const appointP = {\r\n    backgroundColor: '#f4c9c9',\r\n    height: '40px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // paddingLeft: '12px',\r\n    // paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n  };\r\n  const appointPF = {\r\n    backgroundColor: '#bde400',\r\n    height: '40px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // paddingLeft: '12px',\r\n    // paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n  };\r\n  const appointPC = {\r\n    backgroundColor: '#ff4d4d',\r\n    height: '40px',\r\n    marginTop: '10px',\r\n    marginBottom: '10px',\r\n    // paddingLeft: '12px',\r\n    // paddingTop: '8px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '4px',\r\n  };\r\n\r\n\r\n  const isMobile = useMediaQuery({\r\n    query: '(max-width: 760px)'\r\n  })\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {setShow(true);};\r\n\r\n  const popover = (\r\n    <Popover id=\"popover-basic\">\r\n      <Popover.Title as=\"h4\">\r\n        {props.appointment.service}&nbsp;&nbsp;&nbsp;\r\n        { props.appointment.estate !== 'cancelled' ?\r\n\r\n          <CancelAppointmentModal\r\n            show={show}\r\n            handleClose={handleClose}\r\n            handleShow={handleShow}\r\n            aid={props.appointment.id}\r\n            arrindx={props.index}\r\n            indexdate={props.indexdate}\r\n            cancelAppointment={props.cancelAppointment}\r\n          />\r\n\r\n          :\r\n          \"\"\r\n        }\r\n      </Popover.Title>\r\n      <Popover.Content>\r\n        <span>{props.appointment.madeBy?.surname}, {props.appointment.madeBy?.name}</span>\r\n        <br/><small>creada: {moment(props.appointment.createdAt).fromNow()}</small>\r\n      </Popover.Content>\r\n      { props.appointment.estate === 'pending' ?\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-link btn-sm\"\r\n            aid={props.appointment.id}\r\n            arrindx={props.index}\r\n            indexdate={props.indexdate}\r\n            onClick={(e) => {document.body.click();props.fulfillAppointment(e)}}\r\n          >\r\n            Confirmar\r\n          </button>\r\n        </div>\r\n        :\r\n        \"\"\r\n      }\r\n    </Popover>\r\n  );\r\n\r\n  switch (service) {\r\n    case 'Acupuntura':\r\n\r\n      switch (estate) {\r\n        case 'pending':\r\n          return <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose={true} overlay={popover}>\r\n                    <div style={appointA}>\r\n                      { isMobile ? service.charAt(0) : props.appointment.madeBy?.name}\r\n                    </div>\r\n                  </OverlayTrigger>;\r\n        case 'fulfilled':\r\n          return <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose={true} overlay={popover}>\r\n                    <div style={appointAF}>\r\n                      { isMobile ? service.charAt(0) : props.appointment.madeBy?.name}\r\n                    </div>\r\n                  </OverlayTrigger>;\r\n        case 'cancelled':\r\n          return <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose={true} overlay={popover}>\r\n                    <div style={appointAC}>\r\n                      { isMobile ? service.charAt(0) : props.appointment.madeBy?.name}\r\n                    </div>\r\n                  </OverlayTrigger>;\r\n        default:\r\n          return null;\r\n      }\r\n    case 'Psicología':\r\n\r\n      switch (estate) {\r\n        case 'pending':\r\n          return <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose={true} overlay={popover}>\r\n                    <div style={appointP}>\r\n                      { isMobile ? service.charAt(0) : props.appointment.madeBy?.name}\r\n                    </div>\r\n                  </OverlayTrigger>;\r\n        case 'fulfilled':\r\n          return <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose={true} overlay={popover}>\r\n                    <div style={appointPF}>\r\n                      { isMobile ? service.charAt(0) : props.appointment.madeBy?.name}\r\n                    </div>\r\n                  </OverlayTrigger>;\r\n        case 'cancelled':\r\n          return <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose={true} overlay={popover}>\r\n                    <div style={appointPC}>\r\n                      { isMobile ? service.charAt(0) : props.appointment.madeBy?.name}\r\n                    </div>\r\n                  </OverlayTrigger>;\r\n        default:\r\n          return null;\r\n      }\r\n    default:\r\n      return null;\r\n  }\r\n};\r\nexport default AppointmentItem;\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\n// import 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport 'moment/locale/es';\r\n\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n// import Popover from 'react-bootstrap/Popover';\r\n// import OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\n\r\nimport AppointmentItem from './appointment-item';\r\nimport './appointments-list.component.css';\r\n\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.previousDates = this.previousDates.bind(this);\r\n    this.followingDates = this.followingDates.bind(this);\r\n    this.fulfillAppointment = this.fulfillAppointment.bind(this);\r\n    this.cancelAppointment = this.cancelAppointment.bind(this);\r\n    this.redirectPatients = this.redirectPatients.bind(this);\r\n    // this.resize = this.resize.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      apointee: \"fff\",\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      selectedDate: moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\",\r\n      // showShortName: true\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n\r\n    if (this.props.match.params.selected){\r\n      this.setState({\r\n        selectedDate: moment(this.props.match.params.selected, \"DD-MM-YYYY\"),\r\n      }, () => {\r\n       this.retrieveAppointments()\r\n      });\r\n    }else{\r\n      this.setState({\r\n        selectedDate: moment(),\r\n      }, () => {\r\n       this.retrieveAppointments()\r\n      });\r\n    }\r\n\r\n\r\n    // window.addEventListener(\"resize\", this.resize.bind(this));\r\n    // this.resize();\r\n\r\n    // this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  // componentWillUnmount() {\r\n  //     window.removeEventListener(\"resize\", this.resize.bind(this));\r\n  // }\r\n  // resize() {\r\n  //   console.log(window.innerWidth <= 600);\r\n  //     this.setState({showShortName: window.innerWidth <= 600});\r\n  // }\r\n  retrieveAppointments() {\r\n    const { selectedDate } = this.state;\r\n\r\n    AppointmentDataService.findByDateNext(selectedDate.format('DD/MM/YYYY'))\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { nextFiveDates } = response.data;\r\n        // console.log(nextFiveDates);\r\n        this.setState({\r\n          appointments: nextFiveDates,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })}\r\n\r\n  deleteAppointment = (i,appointment) => {\r\n    console.log(\"---------- analizar: usar i o id de mongodb en key ----------------\");\r\n    console.log(i);\r\n    console.log(appointment);\r\n    console.log(\"-------------------------------------------------------------------\");\r\n\r\n    AppointmentDataService.delete(appointment)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n\r\n        this.setState(state => {\r\n          const appointments = state.appointments.filter((item, j) => i !== j);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  addAppointment(e) {\r\n\r\n    console.log(\"Esto no se ejecuta NUNCA\")\r\n    // REVISAR ESTO\r\n    var data = {\r\n      surname: this.props.match.params.surname,\r\n      hour: e.target.getAttribute('inx'),\r\n      date: this.state.selectedDate.format('DD/MM/YYYY'),\r\n      service: this.state.service,\r\n      estate: \"pending\",\r\n    };\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n          const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  previousDates(e) {\r\n    // console.log(this.state.apointee);\r\n    this.setState({\r\n      selectedDate: moment(this.state.selectedDate, \"DD-MM-YYYY\").add(-5,'days'),\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    });\r\n\r\n\r\n  }\r\n\r\n  followingDates(e) {\r\n    // console.log(moment(this.state.selectedDate, \"DD-MM-YYYY\").add(5,'days').format(\"DD-MM-YYYY\"));\r\n    this.setState({\r\n      selectedDate: moment(this.state.selectedDate, \"DD-MM-YYYY\").add(5,'days'),\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    });\r\n\r\n  }\r\n\r\n  cancelAppointment(aid, arrindx, indexdate){\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    AppointmentDataService.update(aid, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let appointments = [...state.appointments];\r\n          appointments[indexdate][arrindx] = response.data;\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  fulfillAppointment(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n    const indexdate = e.target.getAttribute('indexdate');\r\n\r\n    const data = {\r\n      estate: \"fulfilled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          // console.log(response.data);\r\n          // 1. Make a shallow copy of the items\r\n          let appointments = [...state.appointments];\r\n          // 2. Make a shallow copy of the item you want to mutate\r\n          // let item = {...appointments[arrIndx]};\r\n          // 3. Replace the property you're intested in\r\n          // item.name = 'newName';\r\n          // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n          appointments[indexdate][arrIndx] = response.data;\r\n\r\n          // sustituir el appo. por el que llega del backend en vez de concat\r\n          // const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  redirectPatients = (hour, day, selectedDate) => {\r\n    // console.log('red ' + dh);\r\n    // return <Redirect to={`/patients`}/>\r\n\r\n  // let momentDate = moment(date, \"DD-MM-YYYY\");\r\n  // let mongoDate = moment(momentDate).format('YYYY-MM-DD');\r\n\r\n\r\n    // console.log('lllllllllllllllllllllllllllllllllllllll')\r\n    // console.log(selectedDate);\r\n\r\n    let qdate = moment(this.state.selectedDate).add(day,'days').format('DD-MM-YYYY');\r\n    console.log(qdate);\r\n\r\n    let id = hour + \"_\" + qdate + \"_\" + selectedDate;\r\n\r\n    console.log(id);\r\n    this.props.history.push('/patients/appoint/' + id);\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeSlotConainer = {\r\n      border: '1px solid lightgrey',\r\n      minHeight: '80px',\r\n    };\r\n    const hourHeader = {\r\n      border: '1px solid lightgrey',\r\n    };\r\n    const timeSlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // height: '50px',\r\n    };\r\n\r\n    const dropdownService = {\r\n      paddingTop: '25px',\r\n    }\r\n\r\n    const aaaa = {\r\n      height: '40px',\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }\r\n\r\n    const {\r\n      appointments,\r\n      selectedDate,\r\n    } = this.state;\r\n\r\n    // console.log(selectedDate.format('DD/MM/YYYY'));\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          {/* minDate={\"01/01/2020\"} */}\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Fecha\"\r\n                format=\"DD/MM/yyyy\"\r\n                value={this.state.selectedDate}\r\n                onChange={this.handleDateChange}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n          </MuiPickersUtilsProvider>\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <div style={dropdownService}>\r\n            <ButtonGroup>\r\n              <Button variant=\"secondary\" onClick={this.previousDates}>Anteriores</Button>\r\n              <Button variant=\"secondary\" onClick={this.followingDates}>Siguientes</Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-2\" style={timeSlot}>\r\n            </div>\r\n            { Array.from({length: 5}, (item, date) => (\r\n              <div className=\"col-2\" key={date} style={hourHeader}>\r\n                {moment(selectedDate, \"DD-MM-YYYY\").add(date,'days').format('DD')}\r\n              </div>\r\n            ))}\r\n\r\n          </div>\r\n          {Array.from({length: 12}, (item, hour) => (\r\n\r\n            <div className=\"row\" key={hour}>\r\n              <div className=\"col-2\" style={timeSlot}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    {(hour + 9).toString() + \":00\"}\r\n                  </div>\r\n                  <div style={aaaa} className=\"col-10\">\r\n                    &nbsp;\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              { appointments && appointments.map((appointmentDates, indexDate) => (\r\n\r\n                <div className=\"col-2\"\r\n                  style={timeSlotConainer}\r\n                  key={indexDate}\r\n                  onClick={() => {\r\n                    // console.log((hour + 9).toString() + \":00\");\r\n                    this.redirectPatients((hour + 9).toString() + \":00\", indexDate, moment(this.state.selectedDate, \"DD-MM-YYYY\").format(\"DD-MM-YYYY\"));\r\n                    }\r\n                  }\r\n                >\r\n\r\n                  { appointmentDates && appointmentDates.map((appointment, index) => {\r\n\r\n                    return ((hour + 9).toString() + \":00\") === appointment.hour ?\r\n                        <div key={index} className=\"appointmentItem\">\r\n                          <div onClick={(e) => {e.stopPropagation()}}>\r\n                            <AppointmentItem\r\n                              appointment={appointment}\r\n                              index={index}\r\n                              indexdate={indexDate}\r\n                              fulfillAppointment={ this.fulfillAppointment }\r\n                              cancelAppointment={this.cancelAppointment}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                    :\r\n                      \"\"\r\n                    }\r\n                  )}\r\n\r\n\r\n                </div>\r\n\r\n              ))}\r\n\r\n            </div>\r\n\r\n          ))}\r\n\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\n// import 'date-fns';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nimport 'moment/locale/es';\r\n\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.addAppointment = this.addAppointment.bind(this);\r\n    this.deleteAppointment = this.deleteAppointment.bind(this);\r\n    this.setService = this.setService.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      apointee: \"\",\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      selectedDate:moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveAppointments() {\r\n    const { selectedDate } = this.state;\r\n\r\n    AppointmentDataService.findByDate(selectedDate.format('DD/MM/YYYY'))\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { appointments } = response.data;\r\n\r\n        this.setState({\r\n          appointments: appointments,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })}\r\n\r\n  deleteAppointment = (i,appointment) => {\r\n    console.log(\"---------- analizar: usar i o id de mongodb en key ----------------\");\r\n    console.log(i);\r\n    console.log(appointment);\r\n    console.log(\"-------------------------------------------------------------------\");\r\n\r\n    AppointmentDataService.delete(appointment)\r\n      .then((response) => {\r\n\r\n        console.log(response.data);\r\n\r\n        this.setState(state => {\r\n          const appointments = state.appointments.filter((item, j) => i !== j);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n  addAppointment(e) {\r\n\r\n    // console.log(this.state.selectedDate.format('DD-MM-YYYY'));\r\n\r\n    var data = {\r\n      hour: e.target.getAttribute('inx'),\r\n      date: this.state.selectedDate.format('DD-MM-YYYY'),\r\n      service: this.state.service,\r\n      madeBy: this.props.match.params.id\r\n    };\r\n\r\n\r\n    // console.log(data);\r\n\r\n    AppointmentDataService.create(data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n          const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  setService(e) {\r\n    // console.log(e.target.getAttribute('service'));\r\n    this.setState({\r\n      service: e.target.getAttribute('service'),\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const timeSlotConainer = {\r\n      // backgroundColor: '#eaf2bf',\r\n      // height: '50px',\r\n      // padding: '10px',\r\n      border: '1px solid lightgrey',\r\n    };\r\n    const timeSlot = {\r\n      backgroundColor: 'lightgrey',\r\n      // height: '50px',\r\n    };\r\n    const appointmentAcu = {\r\n      backgroundColor: '#bde4ea',\r\n      // height: '50px',\r\n      margin: '5px',\r\n    };\r\n    const appointmentPsico = {\r\n      backgroundColor: '#f4c9c9',\r\n      // height: '50px',\r\n      margin: '5px',\r\n    };\r\n\r\n    const dropdownService = {\r\n      paddingTop: '25px',\r\n      // margin: '25px',\r\n      // backgroundColor: '#f4c9c9',\r\n      // border: '10px solid lightgrey',\r\n    }\r\n\r\n    const {\r\n      appointments,\r\n    } = this.state;\r\n\r\n    // console.log(selectedDate.format('DD/MM/YYYY'));\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-5\">\r\n          {/* minDate={\"01/01/2020\"} */}\r\n          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n              <KeyboardDatePicker\r\n                margin=\"normal\"\r\n                id=\"date-picker-dialog\"\r\n                label=\"Fecha\"\r\n                format=\"DD/MM/yyyy\"\r\n                minDate={moment()}\r\n                value={this.state.selectedDate}\r\n                onChange={this.handleDateChange}\r\n                cancelLabel=\"Cancelar\"\r\n                okLabel=\"Aceptar\"\r\n                KeyboardButtonProps={{\r\n                  'aria-label': 'change date',\r\n                }}\r\n              />\r\n          </MuiPickersUtilsProvider>\r\n\r\n        </div>\r\n        <div className=\"col-7\">\r\n          <div style={dropdownService}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title=\"Servicio\"\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" service=\"Acupuntura\" onClick={this.setService}>Acupuntura</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" service=\"Psicología\" onClick={this.setService}>Psicología</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item href=\"#\">Otros</Dropdown.Item>\r\n              </DropdownButton>\r\n              <FormControl aria-describedby=\"basic-addon1\" value={this.state.service} readOnly />\r\n            </InputGroup>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          {Array.from({length: 12}, (item, hour) => (\r\n\r\n            <div className=\"row\" key={hour}>\r\n              <div className=\"col-2\" style={timeSlot}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-2\">\r\n                    {(hour + 9).toString() + \":00\"}\r\n                  </div>\r\n                  <div className=\"col-10\">\r\n                    <button style={{marginLeft: \"0px\"}}  inx={(hour + 9).toString() + \":00\"} onClick={this.addAppointment} className=\"btn btn-secondary\">\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-10\" style={timeSlotConainer}>\r\n\r\n                { appointments && appointments.map((appointment, index) => {\r\n\r\n                  return ((hour + 9).toString() + \":00\") === appointment.hour ?\r\n                    <Toast onClose={() => this.deleteAppointment(index, appointment.id)} style={ appointment.service === 'Acupuntura' ? appointmentAcu : appointmentPsico} key={index}>\r\n                      <Toast.Header>\r\n                        <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\r\n                        <strong className=\"mr-auto\">{appointment.service}</strong>\r\n                        <small>{moment(appointment.createdAt).fromNow()}</small>\r\n                      </Toast.Header>\r\n                      <Toast.Body>{appointment.madeBy.surname}, {appointment.madeBy.name}</Toast.Body>\r\n                    </Toast>\r\n                  :\r\n                    \"\"\r\n                  }\r\n                )}\r\n\r\n              </div>\r\n            </div>\r\n\r\n          ))}\r\n\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction SearchModal(props) {\r\n\r\n\tconst [date1, setDate1] = useState(moment());\r\n\tconst [date2, setDate2] = useState(moment());\r\n\tconst [filter, setFilter] = useState('pending');\r\n\r\n\r\n\tfunction doFilter(e){\r\n    console.log(e.target.getAttribute('filter'));\r\n    setFilter(e.target.getAttribute('filter'));\r\n    // this.setState({\r\n    //   filter: e.target.getAttribute('filter'),\r\n    // });\r\n  }\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleState(filter);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={props.handleShow}>\r\n        Filtrar\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-1\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date1}\r\n\t\t\t              onChange={setDate1}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-2\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date2}\r\n\t\t\t              onChange={setDate2}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t          </Row>\r\n\t          <Row>\r\n\t            <Col xs={12} md={8}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title={filter}\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" filter=\"pending\" onClick={doFilter}>Pendiente</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"cancelled\" onClick={doFilter}>Cancelada</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"passed\" onClick={doFilter}>Cumplir</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"all\" onClick={doFilter}>Todas</Dropdown.Item>\r\n              </DropdownButton>\r\n              {/*<FormControl aria-describedby=\"basic-addon1\" value={this.state.filter} readOnly />*/}\r\n            </InputGroup>\r\n\t            </Col>\r\n\t          </Row>\r\n\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchModal;","import React, { Component } from \"react\";\r\nimport AppointmentDataService from \"../services/appointment.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SearchModal from \"./search.component\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class AddAppointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveAppointments = this.retrieveAppointments.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.cancelAppointment = this.cancelAppointment.bind(this);\r\n    this.passAppointment = this.passAppointment.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleShowModal = this.handleShowModal.bind(this);\r\n    this.handleState = this.handleState.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      filter: \"pending\",\r\n      selectedDate: moment(),\r\n      appointments: [],\r\n      service: \"Acupuntura\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveAppointments();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveAppointments() {\r\n    const { id } = this.state;\r\n\r\n    AppointmentDataService.findByPatientId(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { appointments } = response.data;\r\n\r\n        this.setState({\r\n          appointments: appointments,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveAppointments()\r\n    })\r\n  }\r\n\r\n  cancelAppointment(e) {\r\n\r\n  \tconst id = e.target.getAttribute('aid');\r\n  \tconst arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n        \t// console.log(response.data);\r\n\t\t\t    // 1. Make a shallow copy of the items\r\n\t\t\t    let appointments = [...state.appointments];\r\n\t\t\t    // 2. Make a shallow copy of the item you want to mutate\r\n\t\t\t    // let item = {...appointments[arrIndx]};\r\n\t\t\t    // 3. Replace the property you're intested in\r\n\t\t\t    // item.name = 'newName';\r\n\t\t\t    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n\t\t\t    appointments[arrIndx] = response.data;\r\n\r\n        \t// sustituir el appo. por el que llega del backend en vez de concat\r\n          // const appointments = state.appointments.concat(response.data);\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  passAppointment(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"passed\",\r\n    };\r\n\r\n    AppointmentDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let appointments = [...state.appointments];\r\n          appointments[arrIndx] = response.data;\r\n\r\n          return {\r\n            appointments,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n  setFilter(e) {\r\n    // console.log(e.target.getAttribute('filter'));\r\n    this.setState({\r\n      filter: e.target.getAttribute('filter'),\r\n    });\r\n  }\r\n\r\n  handleState(filter) {\r\n    // console.log(filter);\r\n    this.setState({\r\n      show: false,\r\n      filter: filter,\r\n    });\r\n  }\r\n  handleCloseModal() {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  handleShowModal() {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      appointments,\r\n      filter,\r\n      show,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          { appointments && appointments.filter(appointment => filter === 'all' ? true : appointment.estate === filter).map((appointment, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{appointment.service}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                \t{moment(appointment.date).format(\"DD-MM-YYYY\")}\r\n                \t&nbsp;a las {appointment.hour}\r\n                \t</Card.Subtitle>\r\n                <Card.Text>\r\n                \t{/*{this.props.match.params.id}*/}\r\n                \t{appointment.madeBy.name}&nbsp;{appointment.madeBy.surname}<br/>\r\n                \t<small>creada {moment(appointment.createdAt).fromNow()}</small><br/>\r\n                </Card.Text>\r\n                { appointment.estate === \"pending\" ? <div>\r\n                <Card.Link href=\"#\" aid={appointment.id} arrindx={index} onClick={this.cancelAppointment}>Cancelar</Card.Link>\r\n                <Card.Link href=\"#\" aid={appointment.id} arrindx={index} onClick={this.passAppointment}>Cumplir</Card.Link>\r\n                </div>\r\n                : appointment.estate === \"passed\" ? <span className=\"badge badge-success\">Cumplida</span> :\r\n                <span className=\"badge badge-warning\">Cancelada</span>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div style={{ /*width: '18rem'*/ }} className=\"col-12\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SearchModal show={show} handleClose={this.handleCloseModal} handleShow={this.handleShowModal} handleState={this.handleState}/>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import http from \"../http-common\";\r\n\r\nclass InvoiceDataService {\r\n  getAll(params) {\r\n    return http.get(\"/invoices\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/invoices/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/invoices\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/invoices/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/invoices/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/invoices`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/invoices?surname=${surname}`);\r\n  }\r\n\r\n  findByPatientId(id) {\r\n    return http.get(`/invoices/patient/${id}`);\r\n  }\r\n\r\n  findByDate(date) {\r\n    return http.get(`/invoices/scheduled?date=${date}`);\r\n  }\r\n\r\n  findByDateNext(date) {\r\n    return http.get(`/invoices/scheduled/next?date=${date}`);\r\n  }\r\n}\r\n\r\nexport default new InvoiceDataService();\r\n","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\n// import { Link } from \"react-router-dom\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport './invoices-list.component.css';\r\n// import Button from 'react-bootstrap/Button';\r\n// import SearchModal from \"./search.component\";\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport SplitButton from 'react-bootstrap/SplitButton';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nexport default class InvoicesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchSurname = this.onChangeSearchSurname.bind(this);\r\n    this.retrieveInvoices = this.retrieveInvoices.bind(this);\r\n    this.handlePageChange = this.handlePageChange.bind(this);\r\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n    this.setDate1 = this.setDate1.bind(this);\r\n    this.setDate2 = this.setDate2.bind(this);\r\n    this.cancelInvoice = this.cancelInvoice.bind(this);\r\n    this.payInvoice = this.payInvoice.bind(this);\r\n    this.sayHi = this.sayHi.bind(this);\r\n\r\n\r\n    this.state = {\r\n      invoices: [],\r\n      searchSurname: \"\",\r\n      date1: moment().startOf('quarter'),\r\n      date2: moment(),\r\n      page: 1,\r\n      count: 0,\r\n      pageSize: 6,\r\n    };\r\n\r\n    this.pageSizes = [3, 6, 9];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveInvoices();\r\n  }\r\n\r\n  onChangeSearchSurname(e) {\r\n    const searchSurname = e.target.value;\r\n\r\n    this.setState({\r\n      searchSurname: searchSurname,\r\n    });\r\n  }\r\n\r\n  getRequestParams(searchSurname, date1, date2, page, pageSize) {\r\n    let params = {};\r\n\r\n    if (searchSurname) {\r\n      params[\"surname\"] = searchSurname;\r\n    }\r\n\r\n    if (date1) {\r\n      params[\"date1\"] = date1;\r\n    }\r\n\r\n    if (date2) {\r\n      params[\"date2\"] = date2;\r\n    }\r\n\r\n    if (page) {\r\n      params[\"page\"] = page - 1;\r\n    }\r\n\r\n    if (pageSize) {\r\n      params[\"size\"] = pageSize;\r\n    }\r\n\r\n    return params;\r\n  }\r\n\r\n  retrieveInvoices() {\r\n    const { searchSurname, date1, date2, page, pageSize } = this.state;\r\n    const params = this.getRequestParams(searchSurname, date1.format(\"DD-MM-YYYY\"), date2.format(\"DD-MM-YYYY\"), page, pageSize);\r\n\r\n    // console.log(params);\r\n\r\n    InvoiceDataService.getAll(params)\r\n      .then((response) => {\r\n        const { invoices, totalPages } = response.data;\r\n\r\n        // console.log(invoices);\r\n        this.setState({\r\n          invoices: invoices,\r\n          count: totalPages,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handlePageChange(event, value) {\r\n    this.setState(\r\n      {\r\n        page: value,\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  handlePageSizeChange(event) {\r\n    this.setState(\r\n      {\r\n        pageSize: event.target.value,\r\n        page: 1\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      console.log('enter press here! ');\r\n      this.retrieveInvoices();\r\n    }\r\n  }\r\n\r\n  toggleMenu(event){\r\n    // console.log(event.target.getAttribute('inx'));\r\n    // 1. Make a shallow copy of the items\r\n    let invoices = [...this.state.invoices];\r\n    // 2. Make a shallow copy of the item you want to mutate\r\n    let invoice = {...invoices[event.target.getAttribute('inx')]};\r\n    // console.log(invoice);\r\n    // 3. Replace the property you're intested in\r\n    invoice.expanded = !!!invoice.expanded;\r\n    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n    invoices[event.target.getAttribute('inx')] = invoice;\r\n    // 5. Set the state to our new copy\r\n    this.setState({invoices});\r\n  }\r\n\r\n  setDate1(date) {\r\n    this.setState(\r\n      {\r\n        date1: date,\r\n        pageSize: 3,\r\n        page: 1,\r\n        count: 0\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  setDate2(date) {\r\n    this.setState(\r\n      {\r\n        date2: date,\r\n        pageSize: 3,\r\n        page: 1,\r\n        count: 0\r\n      },\r\n      () => {\r\n        this.retrieveInvoices();\r\n      }\r\n    );\r\n  }\r\n\r\n  cancelInvoice(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          // console.log(response.data);\r\n          // 1. Make a shallow copy of the items\r\n          let invoices = [...state.invoices];\r\n          // 2. Make a shallow copy of the item you want to mutate\r\n          // let item = {...invoices[arrIndx]};\r\n          // 3. Replace the property you're intested in\r\n          // item.name = 'newName';\r\n          // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n          invoices[arrIndx] = response.data;\r\n\r\n          // sustituir el appo. por el que llega del backend en vez de concat\r\n          // const invoices = state.invoices.concat(response.data);\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  payInvoice(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"payed\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let invoices = [...state.invoices];\r\n          invoices[arrIndx] = response.data;\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  sayHi() {\r\n    console.log('hi');\r\n  }\r\n  render() {\r\n\r\n    const {\r\n      searchSurname,\r\n      invoices,\r\n      date1,\r\n      date2,\r\n      page,\r\n      count,\r\n      pageSize,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-12\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Buscar por apellido\"\r\n              value={searchSurname}\r\n              onChange={this.onChangeSearchSurname}\r\n              onKeyPress={this.handleKeyPress}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.retrieveInvoices}\r\n              >\r\n                Buscar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog-1\"\r\n                  format=\"DD/MM/yyyy\"\r\n                  value={date1}\r\n                  onChange={this.setDate1}\r\n                  cancelLabel=\"Cancelar\"\r\n                  okLabel=\"Aceptar\"\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-dialog-2\"\r\n                  format=\"DD/MM/yyyy\"\r\n                  value={date2}\r\n                  onChange={this.setDate2}\r\n                  cancelLabel=\"Cancelar\"\r\n                  okLabel=\"Aceptar\"\r\n                  KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"col-md-12\">\r\n\r\n          { invoices && invoices.map((invoice, index) => {\r\n\r\n            return <div className=\"card\" style={{ marginBottom: '10px' }} key={index}>\r\n                    <div className=\"card-header\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-8\">\r\n                          {invoice.inumber}/{moment(invoice.createdAt).format('YYYY')}&nbsp;&nbsp;&nbsp;{moment(invoice.date).format(\"DD-MM-YYYY\")}\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n\r\n\r\n                          { invoice.estate === \"emitted\" ?\r\n\r\n                          <div className=\"d-flex justify-content-end\">\r\n\r\n                            {[SplitButton].map((DropdownType, idx) => (\r\n                              <DropdownType\r\n                                as={ButtonGroup}\r\n                                key={idx}\r\n                                id={`dropdown-button-drop-${idx}`}\r\n                                size=\"sm\"\r\n                                variant=\"secondary\"\r\n                                title=\"Pagar\"\r\n                                aid={invoice.id}\r\n                                arrindx={index}\r\n                                onClick={this.payInvoice}\r\n                              >\r\n                                <Dropdown.Item\r\n                                  eventKey=\"1\"\r\n                                  aid={invoice.id}\r\n                                  arrindx={index}\r\n                                  onClick={this.cancelInvoice}\r\n                                >\r\n                                  Cancelar\r\n                                </Dropdown.Item>\r\n                              </DropdownType>\r\n                            ))}\r\n\r\n                          </div>\r\n                          : invoice.estate === \"payed\" ?\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <span className=\"badge badge-primary\">Pagada</span>\r\n                            </div> :\r\n                            <div className=\"d-flex justify-content-end\">\r\n                              <span className=\"badge badge-warning\">Cancelada</span>\r\n                            </div>\r\n                          }\r\n\r\n\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                      <h6 className=\"card-title\">\r\n                        {invoice.name.charAt(0).toUpperCase() + invoice.name.slice(1)}&nbsp;\r\n                        {invoice.surname.charAt(0).toUpperCase() + invoice.surname.slice(1)}\r\n                      </h6>\r\n                      <p className=\"card-text\">\r\n                        {invoice.address}&nbsp;-&nbsp;{invoice.city}\r\n                        <br/>\r\n                        {invoice.dni}\r\n                      </p>\r\n                      <div className=\"row\" style={{ borderRadius: '3px',background: '#F7F7F7', border: '1px solid lightgrey'}}>\r\n                        <div className=\"col-6\">\r\n                          <span>Concepto</span>\r\n                        </div>\r\n                        <div className=\"col-2\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                          Base\r\n                        </div>\r\n                        <div className=\"col-1\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                          <span>IVA</span>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                          <span>Total</span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <span>{invoice.concept}</span>\r\n                        </div>\r\n                        <div className=\"col-2\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                          <span>{invoice.base}</span>\r\n                        </div>\r\n                        <div className=\"col-1\" style={{ paddingLeft: '0px',paddingRight: '0px'}}>\r\n                          <span>{invoice.iva}</span>\r\n                        </div>\r\n                        <div className=\"col-3\">\r\n                          <span>{invoice.total}</span>\r\n                        </div>\r\n                      </div>\r\n                      <hr/>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                          <small>creada {moment(invoice.createdAt).fromNow()}</small>\r\n                        </div>\r\n                        <div className=\"col-6 d-flex justify-content-end\" style={{paddingTop: '3px'}}>\r\n                          <small>{invoice.emittedTo ? invoice.emittedTo._id : \"ficha eliminada\"}</small>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n            }\r\n          )}\r\n\r\n        </div>\r\n        <div className=\"col-md-12\" style={{ marginBottom: '10px' }}>\r\n          <div className=\"paging\">\r\n            <div>\r\n              <span className=\"selectText\">{\"Refs por página: \"}</span>\r\n              <select onChange={this.handlePageSizeChange} value={pageSize}>\r\n                {this.pageSizes.map((size) => (\r\n                  <option key={size} value={size}>\r\n                    {size}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <div className=\"bbb\">\r\n                <Pagination\r\n                  className=\"my-3\"\r\n                  count={count}\r\n                  page={page}\r\n                  siblingCount={1}\r\n                  boundaryCount={1}\r\n                  variant=\"outlined\"\r\n                  shape=\"rounded\"\r\n                  onChange={this.handlePageChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import http from \"../http-common\";\r\n\r\nclass ServiceDataService {\r\n  getAll(params) {\r\n    return http.get(\"/services\", { params });\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`/services/${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"/services\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`/services/${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`/services/${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(`/services`);\r\n  }\r\n\r\n  findBySurname(surname) {\r\n    return http.get(`/services?surname=${surname}`);\r\n  }\r\n\r\n  findObservations(id) {\r\n    return http.get(`/services/${id}/obs`);\r\n  }\r\n\r\n  deleteObservation(id, observation) {\r\n    return http.delete(`/services/${id}/obs?observation=${observation}`);\r\n  }\r\n\r\n  addObservation(id, data) {\r\n    return http.put(`/services/${id}/addob`, data);\r\n  }\r\n}\r\n\r\nexport default new ServiceDataService();\r\n","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nexport default class AddVoice extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeConcept = this.onChangeConcept.bind(this);\r\n    this.onChangeSessions = this.onChangeSessions.bind(this);\r\n    this.saveInvoice = this.saveInvoice.bind(this);\r\n    this.newInvoice = this.newInvoice.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      emittedTo: this.props.match.params.id,\r\n      concept: \"\",\r\n      sessions: 1,\r\n      services: [],\r\n      submitted: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.retrieveServices();\r\n  }\r\n  retrieveServices() {\r\n\r\n    ServiceDataService.getAll({})\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { data } = response.data;\r\n\r\n        // console.log(data);\r\n        // console.log(data[0].id);\r\n        this.setState({\r\n          services: data,\r\n          concept: data[0].id\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n  onChangeConcept(e) {\r\n    // const id = e.target.getAttribute('aid');\r\n    // console.log(id);\r\n\r\n    // console.log(e.target);\r\n    // console.log(e.target.options[e.target.selectedIndex].dataset.serviceid);\r\n    console.log(e.target.options[e.target.selectedIndex].getAttribute('serviceid'));\r\n\r\n\r\n    this.setState({\r\n      concept: e.target.options[e.target.selectedIndex].getAttribute('serviceid'),\r\n    });\r\n  }\r\n  onChangeSessions(e) {\r\n    console.log(e.target.value)\r\n    this.setState({\r\n      sessions: e.target.value,\r\n    });\r\n  }\r\n  saveInvoice() {\r\n    var data = {\r\n      emittedTo: this.state.emittedTo,\r\n      concept: this.state.concept,\r\n      sessions: this.state.sessions\r\n    };\r\n\r\n\r\n    console.log(data);\r\n    InvoiceDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newInvoice() {\r\n    this.setState({\r\n      id: null,\r\n      emittedTo: this.props.match.params.id,\r\n      concept: \"Acupuntura\",\r\n      sessions: 1,\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { services, sessions } = this.state;\r\n\r\n\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Factura creada correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newInvoice}>\r\n              Nueva\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <Form>\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                  <Form.Label>Concepto</Form.Label>\r\n                  <Form.Control as=\"select\" onChange={this.onChangeConcept}>\r\n\r\n                    { services && services.map((service, index) => {\r\n\r\n                      return <option key={index} serviceid={service.id} >{service.name}</option>\r\n\r\n                      }\r\n                    )}\r\n\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"exampleForm.ControlInput1\" onChange={this.onChangeSessions}>\r\n                  <Form.Label>Sesiones</Form.Label>\r\n                  <Form.Control type=\"text\" defaultValue={sessions}/>\r\n                </Form.Group>\r\n              </Form>\r\n            </div>\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.saveInvoice} className=\"btn btn-secondary\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {useState} from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport moment from \"moment\";\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'moment/locale/es';\r\n\r\n\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nfunction SearchModal(props) {\r\n\r\n\tconst [date1, setDate1] = useState(moment());\r\n\tconst [date2, setDate2] = useState(moment());\r\n\tconst [filter, setFilter] = useState('emitted');\r\n\r\n\r\n\tfunction doFilter(e){\r\n    console.log(e.target.getAttribute('filter'));\r\n    setFilter(e.target.getAttribute('filter'));\r\n    // this.setState({\r\n    //   filter: e.target.getAttribute('filter'),\r\n    // });\r\n  }\r\n  function handleChange(event) {\r\n    // Here, we invoke the callback with the new value\r\n    // props.handleState(event.target.value);\r\n    props.handleState(filter);\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button variant=\"primary\" onClick={props.handleShow}>\r\n        Filtrar\r\n      </Button>\r\n\r\n      <Modal show={props.show} onHide={props.handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n\t        <Container>\r\n\t          <Row>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-1\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date1}\r\n\t\t\t              onChange={setDate1}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t            <Col xs={6} md={4}>\r\n\t\t\t          <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\r\n\t\t\t            <KeyboardDatePicker\r\n\t\t\t              margin=\"normal\"\r\n\t\t\t              id=\"date-picker-dialog-2\"\r\n\t\t\t              format=\"DD/MM/yyyy\"\r\n\t\t\t              value={date2}\r\n\t\t\t              onChange={setDate2}\r\n\t\t\t              cancelLabel=\"Cancelar\"\r\n\t\t\t              okLabel=\"Aceptar\"\r\n\t\t\t              KeyboardButtonProps={{\r\n\t\t\t                'aria-label': 'change date',\r\n\t\t\t              }}\r\n\t\t\t            />\r\n\t\t\t          </MuiPickersUtilsProvider>\r\n\t            </Col>\r\n\t          </Row>\r\n\t          <Row>\r\n\t            <Col xs={12} md={8}>\r\n            <InputGroup>\r\n              <DropdownButton\r\n                as={InputGroup.Prepend}\r\n                variant=\"outline-secondary\"\r\n                title={filter}\r\n                id=\"input-group-dropdown-1\"\r\n              >\r\n                <Dropdown.Item href=\"#\" filter=\"emitted\" onClick={doFilter}>Emitidas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"cancelled\" onClick={doFilter}>Canceladas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"payed\" onClick={doFilter}>Pagadas</Dropdown.Item>\r\n                <Dropdown.Item href=\"#\" filter=\"all\" onClick={doFilter}>Todas</Dropdown.Item>\r\n              </DropdownButton>\r\n              {/*<FormControl aria-describedby=\"basic-addon1\" value={this.state.filter} readOnly />*/}\r\n            </InputGroup>\r\n\t            </Col>\r\n\t          </Row>\r\n\r\n\t        </Container>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleChange}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SearchModal;","import React, { Component } from \"react\";\r\nimport InvoiceDataService from \"../services/invoice.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport SearchModal from \"./search-modal-invoices.component\";\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class InvoicesListByPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleDateChange = this.handleDateChange.bind(this);\r\n    this.retrieveInvoices = this.retrieveInvoices.bind(this);\r\n    this.setFilter = this.setFilter.bind(this);\r\n    this.cancelInvoice = this.cancelInvoice.bind(this);\r\n    this.payInvoice = this.payInvoice.bind(this);\r\n    this.handleCloseModal = this.handleCloseModal.bind(this);\r\n    this.handleShowModal = this.handleShowModal.bind(this);\r\n    this.handleState = this.handleState.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      // selectedDate: moment(\"01-01-2020\", \"DD-MM-YYYY\"),\r\n      filter: \"emitted\",\r\n      selectedDate: moment(),\r\n      invoices: [],\r\n      concept: \"Acupuntura\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(moment(\"01-01-2020\", \"DD-MM-YYYY\").format('DD-MM-YYYY'));\r\n    this.retrieveInvoices();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // https://medium.com/better-programming/when-to-use-callback-function-of-setstate-in-react-37fff67e5a6c\r\n    // if (this.state.currentMonth !== prevState.currentMonth) {\r\n    //   this.props.getCalendarData(this.state.currentMonth);\r\n    // }\r\n  }\r\n  retrieveInvoices() {\r\n    const { id } = this.state;\r\n\r\n    InvoiceDataService.findByPatientId(id)\r\n      .then((response) => {\r\n        // console.log(response);\r\n        const { invoices } = response.data;\r\n\r\n        this.setState({\r\n          invoices: invoices,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  handleDateChange(date) {\r\n    // console.log(date);\r\n    this.setState({\r\n      selectedDate: date,\r\n    }, () => {\r\n     this.retrieveInvoices()\r\n    })\r\n  }\r\n\r\n  cancelInvoice(e) {\r\n\r\n  \tconst id = e.target.getAttribute('aid');\r\n  \tconst arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"cancelled\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n        \t// console.log(response.data);\r\n\t\t\t    // 1. Make a shallow copy of the items\r\n\t\t\t    let invoices = [...state.invoices];\r\n\t\t\t    // 2. Make a shallow copy of the item you want to mutate\r\n\t\t\t    // let item = {...invoices[arrIndx]};\r\n\t\t\t    // 3. Replace the property you're intested in\r\n\t\t\t    // item.name = 'newName';\r\n\t\t\t    // 4. Put it back into our array. N.B. we *are* mutating the array here, but that's why we made a copy first\r\n\t\t\t    invoices[arrIndx] = response.data;\r\n\r\n        \t// sustituir el appo. por el que llega del backend en vez de concat\r\n          // const invoices = state.invoices.concat(response.data);\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  payInvoice(e) {\r\n\r\n    const id = e.target.getAttribute('aid');\r\n    const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    const data = {\r\n      estate: \"payed\",\r\n    };\r\n\r\n    InvoiceDataService.update(id, data)\r\n      .then((response) => {\r\n\r\n        // console.log(response.data);\r\n        this.setState(state => {\r\n\r\n          let invoices = [...state.invoices];\r\n          invoices[arrIndx] = response.data;\r\n\r\n          return {\r\n            invoices,\r\n          };\r\n\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n  setFilter(e) {\r\n    // console.log(e.target.getAttribute('filter'));\r\n    this.setState({\r\n      filter: e.target.getAttribute('filter'),\r\n    });\r\n  }\r\n\r\n  handleState(filter) {\r\n    // console.log(filter);\r\n    this.setState({\r\n      show: false,\r\n      filter: filter,\r\n    });\r\n  }\r\n  handleCloseModal() {\r\n    this.setState({\r\n      show: false,\r\n    });\r\n  }\r\n\r\n  handleShowModal() {\r\n    this.setState({\r\n      show: true,\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      invoices,\r\n      filter,\r\n      show,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          { invoices && invoices.filter(invoice => filter === 'all' ? true : invoice.estate === filter).map((invoice, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{invoice.concept}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">\r\n                \t{moment(invoice.date).format(\"DD-MM-YYYY\")}\r\n                \t</Card.Subtitle>\r\n                <Card.Text>\r\n                \t{/*{this.props.match.params.id}*/}\r\n                \t{invoice.emittedTo.name}&nbsp;{invoice.emittedTo.surname}<br/>\r\n                \t<small>creada {moment(invoice.createdAt).fromNow()}</small><br/>\r\n                </Card.Text>\r\n                { invoice.estate === \"emitted\" ? <div>\r\n                <Card.Link href=\"#\" aid={invoice.id} arrindx={index} onClick={this.cancelInvoice}>Cancelar</Card.Link>\r\n                <Card.Link href=\"#\" aid={invoice.id} arrindx={index} onClick={this.payInvoice}>Pagar</Card.Link>\r\n                </div>\r\n                : invoice.estate === \"payed\" ? <span className=\"badge badge-success\">Pagada</span> :\r\n                <span className=\"badge badge-warning\">Cancelada</span>\r\n                }\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div style={{ /*width: '18rem'*/ }} className=\"col-12\">\r\n          <div className=\"d-flex justify-content-center\">\r\n            <SearchModal show={show} handleClose={this.handleCloseModal} handleShow={this.handleShowModal} handleState={this.handleState}/>\r\n          </div>\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport default class ObservationsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveObservations = this.retrieveObservations.bind(this);\r\n    this.deleteObservation = this.deleteObservation.bind(this);\r\n    this.sortObs = this.sortObs.bind(this);\r\n    this.sortObsInv = this.sortObsInv.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      observations: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveObservations();\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n  }\r\n  retrieveObservations() {\r\n    const { id } = this.state;\r\n\r\n    console.log(\"ID del param es: \" + id);\r\n\r\n    PatientDataService.findObservations(id)\r\n      .then((response) => {\r\n        console.log(response);\r\n\r\n        let sortedArray = response.data.sort(function(a,b){\r\n          // Turn your strings into dates, and then subtract them\r\n          // to get a value that is either negative, positive, or zero.\r\n          return new Date(b.createdAt) - new Date(a.createdAt);\r\n        });\r\n\r\n        this.setState({\r\n          observations: sortedArray,\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n// array.sort(function(a,b){\r\n//   // Turn your strings into dates, and then subtract them\r\n//   // to get a value that is either negative, positive, or zero.\r\n//   return new Date(b.date) - new Date(a.date);\r\n// });\r\n  deleteObservation(e) {\r\n\r\n  \tconst observationID = e.target.getAttribute('aid');\r\n  \t// const arrIndx = e.target.getAttribute('arrindx');\r\n\r\n    PatientDataService.deleteObservation(this.state.id, observationID)\r\n      .then((response) => {\r\n\r\n        const newObservations = this.state.observations;\r\n\r\n        const newArray = newObservations.filter(o => o.id !== response.data.observation);\r\n\r\n        console.log(newArray);\r\n\r\n        this.setState({\r\n          observations: newArray\r\n        });\r\n\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  }\r\n\r\n  sortObs() {\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations);\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations.sort(function(a,b){\r\n    //   // Turn your strings into dates, and then subtract them\r\n    //   // to get a value that is either negative, positive, or zero.\r\n    //   return new Date(b.createdAt) - new Date(a.createdAt);\r\n    // }));\r\n\r\n    let sortedArray = this.state.observations.sort(function(a,b){\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n    this.setState({\r\n      observations: sortedArray\r\n    });\r\n\r\n\r\n  }\r\n\r\n  sortObsInv() {\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations);\r\n    // console.log(\"--------------------\");\r\n    // console.log(this.state.observations.sort(function(a,b){\r\n    //   // Turn your strings into dates, and then subtract them\r\n    //   // to get a value that is either negative, positive, or zero.\r\n    //   return new Date(b.createdAt) - new Date(a.createdAt);\r\n    // }));\r\n\r\n\r\n    let sortedArray = this.state.observations.sort(function(a,b){\r\n      // Turn your strings into dates, and then subtract them\r\n      // to get a value that is either negative, positive, or zero.\r\n      return new Date(a.createdAt) - new Date(b.createdAt);\r\n    });\r\n\r\n    this.setState({\r\n      observations: sortedArray\r\n    });\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      id,\r\n      observations\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\" style={{ marginBottom: '10px'/*width: '18rem'*/ }}>\r\n          <Button href={`/patients/${id}/obs/new`} variant=\"secondary\">Nueva</Button>\r\n        </div>\r\n        <div className=\"col-6\" style={{ marginBottom: '10px',display: 'flex',justifyContent: 'flex-end'/*width: '18rem'*/ }}>\r\n          <div>\r\n            {[DropdownButton].map((DropdownType, idx) => (\r\n              <DropdownType\r\n                as={ButtonGroup}\r\n                key={idx}\r\n                id={`dropdown-button-drop-${idx}`}\r\n                variant=\"secondary\"\r\n                title=\"Ordernar\"\r\n              >\r\n                <Dropdown.Item eventKey=\"1\" onClick={this.sortObs}>Recientes</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                <Dropdown.Item eventKey=\"2\" onClick={this.sortObsInv}>Antiguos</Dropdown.Item>\r\n              </DropdownType>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          { observations && observations.map((observation, index) => {\r\n\r\n            return <Card style={{ marginBottom: '10px'/*width: '18rem'*/ }} key={index}>\r\n              <Card.Body>\r\n                <Card.Title>{moment(observation.createdAt).format(\"DD-MM-YYYY\")}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 text-muted\"></Card.Subtitle>\r\n                <Card.Text>\r\n                \t{observation.note}<br/>\r\n                \t<small>xxx</small><br/>\r\n                </Card.Text>\r\n                <Card.Link href=\"#\" aid={observation.id} arrindx={index} onClick={this.deleteObservation}>Borrar</Card.Link>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            }\r\n          )}\r\n          <p>&nbsp;</p>\r\n        </div>\r\n      </div>\r\n\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PatientDataService from \"../services/patient.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class AddPatient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeNote = this.onChangeNote.bind(this);\r\n    this.addObservation = this.addObservation.bind(this);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      note: \"\",\r\n      success: false\r\n    };\r\n  }\r\n\r\n  onChangeNote(e) {\r\n    this.setState({\r\n      note: e.target.value,\r\n    });\r\n  }\r\n\r\n  addObservation() {\r\n    var data = {\r\n      note: this.state.note\r\n    };\r\n\r\n    PatientDataService.addObservation(this.state.id, data)\r\n      .then((response) => {\r\n        this.setState({\r\n          success: true\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return this.state.success ? <Redirect to={`/patients/${this.state.id}/obs`} /> : (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newPatient}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"note\">Note</label>\r\n              <textarea\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"note\"\r\n                required\r\n                value={this.state.note}\r\n                onChange={this.onChangeNote}\r\n                name=\"note\"\r\n                rows=\"10\"\r\n              >\r\n              </textarea>\r\n            </div>\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.addObservation} className=\"btn btn-secondary\">\r\n              Guardar\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\n// import { Link } from \"react-router-dom\";\r\n// import './patients-list.component.css';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class ServicesList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.retrieveServices = this.retrieveServices.bind(this);\r\n\r\n    this.state = {\r\n      services: [],\r\n    };\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveServices();\r\n  }\r\n\r\n  retrieveServices() {\r\n\r\n    ServiceDataService.getAll({})\r\n      .then((response) => {\r\n        const { data } = response.data;\r\n\r\n        console.log(data);\r\n        // console.log(response.data.data);\r\n\r\n        this.setState({\r\n          services: data\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n\r\n    const {\r\n      services,\r\n    } = this.state;\r\n\r\n    return (\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n\r\n              { services && services.map((service, index) => {\r\n\r\n                return <div className=\"row\"  key={index}>\r\n                        <div className=\"col-12\">\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                  <p>Servicio: {service.name}</p>\r\n                                  <p>Servicio: {service.cost}</p>\r\n                                  <p>IVA: {service.iva}</p>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                  <Dropdown as={ButtonGroup}>\r\n                                    <Button variant=\"secondary\" href={\"/services/\" + service.id}>Modificar</Button>\r\n\r\n                                    <Dropdown.Toggle split variant=\"secondary\" id=\"dropdown-split-basic\" />\r\n\r\n                                    <Dropdown.Menu>\r\n                                      <Dropdown.Item href={\"/addservice\"}>Nuevo</Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                  </Dropdown>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                       </div>\r\n                }\r\n\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\n\r\nexport default class AddService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIVA = this.onChangeIVA.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.createService = this.createService.bind(this);\r\n    this.newService = this.newService.bind(this);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      iva: 0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n  onChangeIVA(e) {\r\n    this.setState({\r\n      iva: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  createService() {\r\n    var data = {\r\n      iva: this.state.iva,\r\n      name: this.state.name\r\n    };\r\n\r\n    ServiceDataService.create(data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newService() {\r\n    this.setState({\r\n      name: \"\",\r\n      iva: 0,\r\n      submitted: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>Servicio añadido correctamente!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newService}>\r\n              Nuevo\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Service</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"iva\">IVA</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"iva\"\r\n                required\r\n                value={this.state.iva}\r\n                onChange={this.onChangeIVA}\r\n                name=\"iva\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.createService} className=\"btn btn-secondary\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ServiceDataService from \"../services/service.service\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class AddService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeIVA = this.onChangeIVA.bind(this);\r\n    this.onChangeName = this.onChangeName.bind(this);\r\n    this.updateService = this.updateService.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      iva: 0,\r\n      submitted: false,\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.getService(this.props.match.params.id);\r\n  }\r\n\r\n  getService(id) {\r\n    ServiceDataService.get(id)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          iva: response.data.iva\r\n        });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  onChangeIVA(e) {\r\n    this.setState({\r\n      iva: e.target.value,\r\n    });\r\n  }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  }\r\n\r\n  updateService() {\r\n    var data = {\r\n      iva: this.state.iva,\r\n      name: this.state.name\r\n    };\r\n\r\n    ServiceDataService.update(this.state.id,data)\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true\r\n        });\r\n        // console.log(response.data);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? <Redirect to={`/services`} /> : (\r\n          <div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Service</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeName}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"iva\">IVA</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"iva\"\r\n                required\r\n                value={this.state.iva}\r\n                onChange={this.onChangeIVA}\r\n                name=\"iva\"\r\n              />\r\n            </div>\r\n\r\n\r\n            <button style={{marginBottom: \"25px\"}} onClick={this.updateService} className=\"btn btn-secondary\">\r\n              Añadir\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddPatient from \"./components/add-patient.component\";\nimport Patient from \"./components/patient.component\";\nimport PatientsList from \"./components/patients-list.component\";\nimport AppointmentsList from \"./components/appointments-list.component\";\nimport AddAppointment from \"./components/add-appointment.component\";\n// import Appointment from \"./components/appointment.component\";\nimport AppointmentsListByPatient from \"./components/appointments-list-by-patient.component\";\n\nimport InvoicesList from \"./components/invoices-list.component\";\nimport AddInvoice from \"./components/add-invoice.component\";\nimport InvoicesListByPatient from \"./components/invoices-list-by-patient.component\";\n\nimport ObservationsList from \"./components/observations-list-by-patient.component\";\nimport AddObservation from \"./components/add-observation.component\";\n\nimport ServicesList from \"./components/services-list.component\";\nimport AddService from \"./components/add-service.component\";\nimport Service from \"./components/service.component\";\n\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n        {/*\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <a href=\"/patients\" className=\"navbar-brand\">\n              Centro Otomo\n            </a>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/patients\"} className=\"nav-link\">\n                  Pacientes\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Nuevo\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link to={\"/appointments\"} className=\"nav-link\">\n                  Citas\n                </Link>\n              </li>\n            </div>\n          </nav>\n        */}\n          <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"/api/patients\">Centro Otomo</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/api/appointments\">Citas</Nav.Link>\n                <NavDropdown alignRight title=\"Pacientes\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"/api/patients\">Buscar</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"/api/add\">Nuevo</NavDropdown.Item>\n                </NavDropdown>\n                <NavDropdown alignRight title=\"Facturas\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"/api/invoices\">Facturas</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"/api/services\">Servicios</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/api/addservice\">Nuevo Servicio</NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route\n                exact\n                path={[\"/\", \"/api/patients\"]}\n                component={PatientsList}\n              />\n              <Route\n                exact\n                path={[\"/\", \"/api/patients/appoint/:id\"]}\n                component={PatientsList}\n              />\n              <Route exact path=\"/api/add\" component={AddPatient} />\n              <Route exact path=\"/api/patients/:id\" component={Patient} />\n              <Route exact path=\"/api/patients/:id/obs\" component={ObservationsList} />\n              <Route path=\"/api/patients/:id/obs/new\" component={AddObservation} />\n              <Route\n                exact\n                path={[\"/\", \"/api/appointments\"]}\n                component={AppointmentsList}\n              />\n              <Route\n                exact\n                path={[\"/\", \"/api/appointments/after/:selected\"]}\n                component={AppointmentsList}\n              />\n              <Route exact path=\"/api/addappointment/:id\" component={AddAppointment} />\n              {/*<Route path=\"/appointments/:id\" component={Appointment} />*/}\n              <Route path=\"/api/appointments/patient/:id\" component={AppointmentsListByPatient} />\n              <Route\n                exact\n                path={[\"/\", \"/api/invoices\"]}\n                component={InvoicesList}\n              />\n              <Route exact path=\"/api/addinvoice/:id\" component={AddInvoice} />\n              <Route path=\"/api/invoices/patient/:id\" component={InvoicesListByPatient} />\n              <Route\n                exact\n                path={[\"/\", \"/api/services\"]}\n                component={ServicesList}\n              />\n              <Route exact path=\"/api/addservice\" component={AddService} />\n              <Route exact path=\"/api/services/:id\" component={Service} />\n              {/*\n              */}\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// import the library\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\n// import your icons\r\n// import { coffee } from '@fortawesome/free-regular-svg-icons';\r\n// import { faCoffee } from '@fortawesome/free-regular-svg-icons';\r\nimport { faCoffee, faCalendarTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(\r\n  faCoffee,\r\n  faCalendarTimes\r\n);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import your fontawesome library\nimport './fontawesome';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}